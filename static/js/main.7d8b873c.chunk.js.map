{"version":3,"sources":["components/NumberSelector.module.css","components/Log.module.css","helpers/SillyGooseError.ts","helpers/helpers.ts","components/Log.tsx","components/NumberSelector.tsx","helpers/solver.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SillyGooseError","m","Object","setPrototypeOf","prototype","Error","isSorted","arr","every","e","i","reverseUpTo","slice","reverse","reverseUpToEfficient","idx","newArr","push","length","array","isObjectEmpty","obj","randElement","a","min","max","Math","ceil","floor","random","randInt","Log","props","logs","maxLogs","fadeCount","increasePercent","pow","MIN_OPACITY","currentFadeCount","fadeCountOffset","calcOpacity","n","round","getOpacity","logElements","map","l","className","styles","log","style","opacity","NumberSelector","numArr","tryCount","goodMoves","numbers","includes","goodMove","onClick","numberSelectorContainer","solutionMap","populateEasySolutionMap","console","time","sorted","permutations","j","str","join","steps","timeEnd","window","setTimeout","solver","solution","permutationsMap","getShuffledNumbers","temp","shuffle","App","useState","setLogs","setNumArr","winCount","setWinCount","turns","setTurns","perfect","setPerfect","numbersSorted","useEffect","handleVictory","getHints","addLog","s","reset","newPuzzle","newPerfect","handleReverseUpTo","message","overage","useEventListener","ev","test","key","Number","handleKeyDown","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d8b873c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberSelectorContainer\":\"NumberSelector_numberSelectorContainer__P_a8X\",\"goodMove\":\"NumberSelector_goodMove__2Dc1u\",\"hintBounce\":\"NumberSelector_hintBounce__2ddo6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"log\":\"Log_log__1Ppmz\"};","class SillyGooseError extends Error {\r\n  constructor(m: string) {\r\n    super(m);\r\n\r\n    // Set the prototype explicitly.\r\n    Object.setPrototypeOf(this, SillyGooseError.prototype);\r\n  }\r\n}\r\n\r\nexport default SillyGooseError;\r\n","import { puzzle } from './puzzle';\r\nimport SillyGooseError from './SillyGooseError';\r\n\r\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\nexport const shuffle = <T>(array: T[]): T[] => {\r\n  const arr = [...array];\r\n  for (var i = arr.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  }\r\n  return arr;\r\n}\r\n\r\n\r\nexport const toFixedNumber = (num: number, digits: number): number => {\r\n  var pow = Math.pow(10, digits);\r\n  return Math.round(num*pow) / pow;\r\n}\r\n\r\nexport const roundToTwoDecimals = (n: number) => Math.round(n * 100) / 100;\r\n\r\nexport const isSorted = (arr: puzzle): boolean => arr.every((e, i) => e === i+1);\r\n\r\nexport const reverseUpTo = (arr: puzzle, i: number): puzzle => [...arr.slice(0, i+1).reverse(), ...arr.slice(i+1)] as puzzle;\r\n\r\nexport const reverseUpToEfficient = (arr: puzzle, idx: number): puzzle => {\r\n  const newArr = [];\r\n  for (let i = idx; i >= 0; i--) {\r\n    newArr.push(arr[i]);\r\n  }\r\n  for (let i = idx + 1; i < arr.length; i++) {\r\n    newArr.push(arr[i]);\r\n  }\r\n  return newArr as puzzle;\r\n}\r\n\r\nexport const reverse = <T>(array: T[]): T[] => array.slice().reverse();\r\n\r\nexport const isObjectEmpty = (obj: Object) => {\r\n  for(var i in obj) return false; \r\n  return true;\r\n}\r\n\r\nexport const randInt = (min: number = 0, max: number = 9): number => {\r\n  if (max < min) throw new SillyGooseError('Max cannot be less than min, you silly goose.');\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport const randElement = <T>(a: T[]): T => a[randInt(0, a.length - 1)];","import React from 'react';\r\nimport { roundToTwoDecimals } from '../helpers/helpers';\r\nimport styles from './Log.module.css';\r\n\r\ninterface LogProps {\r\n  logs: string[];\r\n  maxLogs: number;\r\n}\r\n\r\nconst MIN_OPACITY = 0.15;\r\nconst FADE_COUNT = 3;\r\n\r\nfunction Log(props: LogProps) {\r\n  const {logs, maxLogs} = props;\r\n\r\n  const fadeCount = Math.min(maxLogs, FADE_COUNT);\r\n  const increasePercent = Math.pow(2, 1 / fadeCount) * Math.pow(MIN_OPACITY + 1, -1 / fadeCount);\r\n  const currentFadeCount = logs.length + fadeCount - maxLogs;\r\n  const fadeCountOffset = fadeCount - currentFadeCount;\r\n\r\n  const calcOpacity = (i: number): number =>  roundToTwoDecimals((1 + MIN_OPACITY) * Math.pow(increasePercent, i + fadeCountOffset) - 1);\r\n\r\n  const getOpacity = (i: number): number | '' => (i >= currentFadeCount) ? '' : calcOpacity(i);\r\n\r\n  const logElements = logs.map((l: string, i: number) => <div key={`${i}-log`} className={styles.log} style={{opacity: getOpacity(i)}}>{l}</div>).reverse();\r\n\r\n  return <div>{logElements}</div>\r\n}\r\n\r\nexport default Log;","import React from 'react';\r\nimport { puzzle } from '../helpers/puzzle';\r\nimport styles from './NumberSelector.module.css';\r\n\r\ninterface NumberSelectorProps {\r\n  numArr: puzzle;\r\n  reverseUpTo: (i: number) => void;\r\n  tryCount: number;\r\n  goodMoves: number[];\r\n}\r\n\r\nfunction NumberSelector(props: NumberSelectorProps) {\r\n  const {numArr, reverseUpTo, tryCount, goodMoves} = props;\r\n\r\n  const numbers = numArr.map((n: number, i: number) => (\r\n    <button className={goodMoves.includes(i) ? styles.goodMove : ''} onClick={() => reverseUpTo(i)} key={`${i}-numberSelector`}>{n}</button>\r\n  ));\r\n\r\n  return <div className={styles.numberSelectorContainer}>Attempt {tryCount}: {numbers}</div>\r\n}\r\n\r\nexport default NumberSelector;","import { isObjectEmpty, isSorted, reverse, reverseUpTo, reverseUpToEfficient, toFixedNumber } from './helpers';\r\nimport { puzzle } from './puzzle';\r\n\r\ntype permutation = [puzzle, number[]];\r\nconst solutionMap: {[key: string]: number[]} = {};\r\n\r\nfunction populateEasySolutionMap() {\r\n  if (!isObjectEmpty(solutionMap)) return;\r\n  console.time('populateEasySolutionMap');\r\n  solutionMap['123456789'] = [];\r\n  const sorted: puzzle = [1,2,3,4,5,6,7,8,9];\r\n  const permutations: permutation[] = [[sorted, []]];\r\n  for (let i = 0; permutations[i][1].length < 6 /* alt: i < permutations.length */; i++) {\r\n    for (let j = 1; j < sorted.length; j++) {\r\n      const newArr = reverseUpToEfficient(permutations[i][0], j);\r\n      const str = newArr.join('');\r\n      if (solutionMap[str]) continue;\r\n      const steps = [...permutations[i][1], j];\r\n      permutations.push([newArr, steps]);\r\n      solutionMap[str] = steps;\r\n    }\r\n  }\r\n  console.timeEnd('populateEasySolutionMap');\r\n};\r\n\r\nwindow.setTimeout(populateEasySolutionMap, 0);\r\n\r\nexport const solver = (arr: puzzle): number[] => {\r\n  if (isObjectEmpty(solutionMap)) {\r\n    populateEasySolutionMap();\r\n  }\r\n\r\n  let solution: number[] | null = null;\r\n  const permutations: permutation[] = [[arr, []]];\r\n  const str = arr.join('');\r\n  if (solutionMap[str]) {\r\n    solution = reverse(solutionMap[str]);\r\n  } else {\r\n    const permutationsMap: {[key: string]: number[]} = {[arr.join('')]: []};\r\n    for (let i = 0; !solution && i < permutations.length && i < 1_000_000; i++) {\r\n      for (let j = 1; !solution && j < arr.length; j++) {\r\n        const newArr = reverseUpTo(permutations[i][0], j);\r\n        const str = newArr.join('');\r\n        if (permutationsMap[str]) continue;\r\n        const steps = [...permutations[i][1], j];\r\n        if (solutionMap[str]) {\r\n          solution = [...steps, ...reverse(solutionMap[str])];\r\n        } else if (isSorted(newArr)) {\r\n          solution = steps;\r\n          break;\r\n        }\r\n\r\n        permutations.push([newArr, steps]);\r\n        permutationsMap[str] = steps;\r\n      }\r\n    }\r\n  }\r\n    \r\n  if (solution) {\r\n    return solution;\r\n  }\r\n  throw new Error('Solver failed for ' + arr);\r\n}\r\n\r\nexport const getHints = (arr: puzzle): {solution: number[], goodMoves: number[]} => {\r\n  const solution = solver(arr);\r\n  const goodMoves: number[] = [];\r\n  for (let i = 1; i < arr.length; i++) {\r\n    if (solution[0] === i) {\r\n      goodMoves.push(i);\r\n      continue;\r\n    }\r\n    const newArr = reverseUpTo(arr, i);\r\n    const newSolution = solver(newArr);\r\n    if (newSolution.length < solution.length) goodMoves.push(i);\r\n  }\r\n  return {solution, goodMoves};\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Log from './components/Log';\nimport NumberSelector from './components/NumberSelector';\nimport { isSorted, randElement, reverseUpTo, shuffle } from './helpers/helpers';\nimport { puzzle } from './helpers/puzzle';\nimport { getHints, solver } from './helpers/solver';\nimport useEventListener from '@use-it/event-listener'\n\nconst START_MESSAGE = 'Your goal is to sort the list. Click a number, and all numbers from the beginning to that point will be reversed. How many turns will it take?';\n\nconst getShuffledNumbers = (): puzzle => shuffle([1,2,3,4,5,6,7,8,9]) as puzzle;\n\nfunction App() {\n  const [logs, setLogs] = useState<string[]>([START_MESSAGE]);\n  const [numArr, setNumArr] = useState<puzzle>(getShuffledNumbers());\n  const [winCount, setWinCount] = useState(0);\n  const [turns, setTurns] = useState(0);\n  const [maxLogs, setMaxLogs] = useState(25);\n  const [perfect, setPerfect] = useState(solver(numArr).length);\n\n  const numbersSorted = isSorted(numArr);\n\n  useEffect(() => {\n    if (numbersSorted) handleVictory();\n  }, [numArr]);\n\n  const {solution, goodMoves} = getHints(numArr);\n\n  const addLog = (s: string) => {\n    setLogs([...logs, s].slice(-1 * maxLogs));\n  }\n\n  const reset = () => {\n    setWinCount(winCount + 1);\n    const newPuzzle = getShuffledNumbers();\n    setNumArr(newPuzzle);\n    setTurns(0);\n    const newPerfect = solver(newPuzzle).length;\n    setPerfect(newPerfect)\n    addLog(`Game ${winCount + 2}: Good luck! The best strategy solves this in ${newPerfect} steps.`);\n  }\n\n  const handleReverseUpTo = (i: number): void => {\n    if (i === 0) return;\n    const newArr = reverseUpTo(numArr, i);\n\n    addLog(`Attempt ${turns + 1}: ${numArr.join(', ')} - flip ${i+1}` + (goodMoves.includes(i) ? ' (Good move!)' : ''));\n    setNumArr(newArr);\n    setTurns(turns + 1);\n  }\n\n  const logSolution = () => {\n    console.log(solver(numArr));\n  }\n\n  function handleKeyDown(ev: KeyboardEvent) {\n    if (!/^\\d$/.test(ev.key)) return;\n    handleReverseUpTo(Number(ev.key));\n  };\n\n  const handleVictory = () => {\n    const overage = turns - perfect;\n    let message;\n    if (overage === 0) {\n      message = `🎉🥳🎈PERFECT GAME!🎈🥳🎉`;\n    } else if (overage <= 2) {\n      message = `Nearly flawless!`\n    } else if (overage <= 5) {\n      message =`Well done! You finished in ${overage} moves over par.`\n    } else {\n      message = `Ouch! You went ${overage} moves over par. Better luck next time.`\n    }\n    const invites = [\n      'Go again?',\n      'Another game?',\n      'Try another?',\n      'One more time?',\n      'Hit that New Game button!'\n    ];\n    addLog(`${message} ${randElement(invites)}`)\n  };\n\n  useEventListener('keydown', (ev: Event) => handleKeyDown(ev as KeyboardEvent));\n\n  return (\n    <div className=\"App\">\n      <button onClick={reset}>Reset</button>\n      {numbersSorted ? \n        <button onClick={reset}>New Game</button>\n        : <NumberSelector numArr={numArr} reverseUpTo={handleReverseUpTo} tryCount={turns + 1} goodMoves={goodMoves}></NumberSelector>\n      }\n      <Log logs={logs} maxLogs={maxLogs}></Log>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}