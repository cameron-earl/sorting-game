{"version":3,"sources":["components/NumberButton.module.css","components/Log.module.css","helpers/SillyGooseError.ts","helpers/helpers.ts","components/Log.tsx","helpers/colorBlend.ts","components/NumberButton.tsx","components/NumberSelector.tsx","helpers/solver.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SillyGooseError","m","Object","setPrototypeOf","prototype","Error","isSorted","arr","every","e","i","reverseUpTo","slice","reverse","reverseUpToEfficient","idx","newArr","push","length","array","isObjectEmpty","obj","randElement","a","min","max","Math","ceil","floor","random","randInt","Log","props","logs","maxLogs","fadeCount","increasePercent","pow","MIN_OPACITY","currentFadeCount","fadeCountOffset","calcOpacity","n","round","getOpacity","logElements","map","l","opacity","className","styles","log","style","colorBlend","start","end","percent","isHex","rgbStart","hexColorToNumArr","rgbEnd","midPoint","decToHex","join","str","test","hexToDec","parseInt","toString","padStart","b","perc","NumberButton","color","children","goodMove","disabled","onClick","btnClass","classNames","numberButton","backgroundColor","borderColor","NumberSelector","numArr","tryCount","goodMoves","startColor","endColor","numbers","includes","numberSelectorContainer","solutionMap","populateEasySolutionMap","console","time","sorted","permutations","j","steps","timeEnd","window","setTimeout","solver","solution","permutationsMap","getShuffledNumbers","temp","shuffle","doTheThing","debounce","fn","value","App","useState","setLogs","setNumArr","winCount","setWinCount","turns","setTurns","perfect","setPerfect","setStartColor","setEndColor","numbersSorted","getHints","addLog","s","handleReverseUpTo","handleColorChange","target","name","useEventListener","ev","key","Number","handleKeyDown","useEffect","message","overage","handleVictory","type","onChange","newPuzzle","newPerfect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c18247f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"numberButton\":\"NumberButton_numberButton__1IYRm\",\"goodMove\":\"NumberButton_goodMove__1fJ1B\",\"hintBounce\":\"NumberButton_hintBounce__vEAG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"log\":\"Log_log__1Ppmz\"};","class SillyGooseError extends Error {\r\n  constructor(m: string) {\r\n    super(m);\r\n\r\n    // Set the prototype explicitly.\r\n    Object.setPrototypeOf(this, SillyGooseError.prototype);\r\n  }\r\n}\r\n\r\nexport default SillyGooseError;\r\n","import { puzzle } from './puzzle';\r\nimport SillyGooseError from './SillyGooseError';\r\n\r\n// https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\r\nexport const shuffle = <T>(array: T[]): T[] => {\r\n  const arr = [...array];\r\n  for (var i = arr.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  }\r\n  return arr;\r\n}\r\n\r\n\r\nexport const toFixedNumber = (num: number, digits: number): number => {\r\n  var pow = Math.pow(10, digits);\r\n  return Math.round(num*pow) / pow;\r\n}\r\n\r\nexport const roundToTwoDecimals = (n: number) => Math.round(n * 100) / 100;\r\n\r\nexport const isSorted = (arr: puzzle): boolean => arr.every((e, i) => e === i+1);\r\n\r\nexport const reverseUpTo = (arr: puzzle, i: number): puzzle => [...arr.slice(0, i+1).reverse(), ...arr.slice(i+1)] as puzzle;\r\n\r\nexport const reverseUpToEfficient = (arr: puzzle, idx: number): puzzle => {\r\n  const newArr = [];\r\n  for (let i = idx; i >= 0; i--) {\r\n    newArr.push(arr[i]);\r\n  }\r\n  for (let i = idx + 1; i < arr.length; i++) {\r\n    newArr.push(arr[i]);\r\n  }\r\n  return newArr as puzzle;\r\n}\r\n\r\nexport const reverse = <T>(array: T[]): T[] => array.slice().reverse();\r\n\r\nexport const isObjectEmpty = (obj: Object) => {\r\n  for(var i in obj) return false; \r\n  return true;\r\n}\r\n\r\nexport const randInt = (min: number = 0, max: number = 9): number => {\r\n  if (max < min) throw new SillyGooseError('Max cannot be less than min, you silly goose.');\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nexport const randElement = <T>(a: T[]): T => a[randInt(0, a.length - 1)];","import React from 'react';\r\nimport { roundToTwoDecimals } from '../helpers/helpers';\r\nimport styles from './Log.module.css';\r\n\r\ninterface LogProps {\r\n  logs: string[];\r\n  maxLogs: number;\r\n}\r\n\r\nconst MIN_OPACITY = 0.15;\r\nconst FADE_COUNT = 3;\r\n\r\nfunction Log(props: LogProps) {\r\n  const {logs, maxLogs} = props;\r\n\r\n  const fadeCount = Math.min(maxLogs, FADE_COUNT);\r\n  const increasePercent = Math.pow(2, 1 / fadeCount) * Math.pow(MIN_OPACITY + 1, -1 / fadeCount);\r\n  const currentFadeCount = logs.length + fadeCount - maxLogs;\r\n  const fadeCountOffset = fadeCount - currentFadeCount;\r\n\r\n  const calcOpacity = (i: number): number =>  roundToTwoDecimals((1 + MIN_OPACITY) * Math.pow(increasePercent, i + fadeCountOffset) - 1);\r\n\r\n  const getOpacity = (i: number): number | '' => (i >= currentFadeCount) ? '' : calcOpacity(i);\r\n\r\n  const logElements = logs.map((l: string, i: number) => {\r\n    const opacity = getOpacity(i);\r\n    if (typeof opacity === 'number' && opacity < 0) return '';\r\n    return <div key={`${i}-log`} className={styles.log} style={{opacity: getOpacity(i)}}>{l}</div>\r\n  }).reverse();\r\n\r\n  return <div>{logElements}</div>\r\n}\r\n\r\nexport default Log;","import SillyGooseError from './SillyGooseError';\r\n\r\nexport const colorBlend = (start: string, end: string, percent: number) => {\r\n  if (!isHex(start) || !isHex(end)) {\r\n    throw new SillyGooseError(\r\n      `Why are you sending things like \"${start}\" and \"${end}\" to a function that requires hex color values?`\r\n    );\r\n  }\r\n\r\n  const rgbStart = hexColorToNumArr(start);\r\n  const rgbEnd = hexColorToNumArr(end);\r\n\r\n  const blend = [0, 1, 2].map((i) => midPoint(rgbStart[i], rgbEnd[i], percent));\r\n  return '#' + blend.map(decToHex).join('');\r\n};\r\n\r\nexport const isHex = (str: string): boolean => {\r\n  const hexRegex = /^#[a-fA-F0-9]{6}$/;\r\n  return hexRegex.test(str);\r\n};\r\n\r\nexport const hexToDec = (str: string): number => {\r\n  return parseInt(str, 16);\r\n};\r\n\r\nexport const decToHex = (n: number): string => {\r\n  return n.toString(16).padStart(2, '0');\r\n};\r\n\r\nexport const hexColorToNumArr = (str: string) => {\r\n  const r = str.slice(1, 3);\r\n  const g = str.slice(3, 5);\r\n  const b = str.slice(5);\r\n\r\n  return [r, g, b].map(hexToDec);\r\n};\r\n\r\nexport const midPoint = (a: number, b: number, percent: number) => {\r\n  const min = Math.min(a, b);\r\n  const max = Math.max(a, b);\r\n  const perc = a > b ? 1 - percent : percent;\r\n\r\n  return Math.floor((max - min) * perc + min);\r\n};\r\n","import classNames from 'classnames';\r\nimport React from 'react';\r\n\r\nimport styles from './NumberButton.module.css';\r\n\r\ninterface NumberButtonProps {\r\n  color: string;\r\n  children: number;\r\n  goodMove: boolean;\r\n  disabled: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nfunction NumberButton(props: NumberButtonProps) {\r\n  const { color, children, goodMove, disabled, onClick } = props;\r\n\r\n  const btnClass = classNames({ [styles.goodMove]: goodMove }, styles.numberButton);\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={btnClass}\r\n      style={{ backgroundColor: color, borderColor: color }}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default NumberButton;\r\n","import React from 'react';\r\n\r\nimport { colorBlend } from '../helpers/colorBlend';\r\nimport { puzzle } from '../helpers/puzzle';\r\nimport NumberButton from './NumberButton';\r\nimport styles from './NumberSelector.module.css';\r\n\r\ninterface NumberSelectorProps {\r\n  numArr: puzzle;\r\n  reverseUpTo: (i: number) => void;\r\n  tryCount: number;\r\n  goodMoves: number[];\r\n  startColor: string;\r\n  endColor: string;\r\n}\r\n\r\nfunction NumberSelector(props: NumberSelectorProps) {\r\n  const { numArr, reverseUpTo, tryCount, goodMoves, startColor, endColor } = props;\r\n\r\n  const numbers = numArr.map((n: number, i: number) => (\r\n    <NumberButton\r\n      disabled={i === 0 || !goodMoves.length}\r\n      color={colorBlend(startColor, endColor, (n - 1) / (numArr.length - 1))}\r\n      goodMove={goodMoves.includes(i)}\r\n      onClick={() => reverseUpTo(i)}\r\n      key={`${i}-numberSelector`}\r\n    >\r\n      {n}\r\n    </NumberButton>\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.numberSelectorContainer}>\r\n      Attempt {tryCount}: {numbers}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NumberSelector;\r\n","import { isObjectEmpty, isSorted, reverse, reverseUpTo, reverseUpToEfficient, toFixedNumber } from './helpers';\r\nimport { puzzle } from './puzzle';\r\n\r\ntype permutation = [puzzle, number[]];\r\nconst solutionMap: {[key: string]: number[]} = {};\r\n\r\nfunction populateEasySolutionMap() {\r\n  if (!isObjectEmpty(solutionMap)) return;\r\n  console.time('populateEasySolutionMap');\r\n  solutionMap['123456789'] = [];\r\n  const sorted: puzzle = [1,2,3,4,5,6,7,8,9];\r\n  const permutations: permutation[] = [[sorted, []]];\r\n  for (let i = 0; permutations[i][1].length < 6 /* alt: i < permutations.length */; i++) {\r\n    for (let j = 1; j < sorted.length; j++) {\r\n      const newArr = reverseUpToEfficient(permutations[i][0], j);\r\n      const str = newArr.join('');\r\n      if (solutionMap[str]) continue;\r\n      const steps = [...permutations[i][1], j];\r\n      permutations.push([newArr, steps]);\r\n      solutionMap[str] = steps;\r\n    }\r\n  }\r\n  console.timeEnd('populateEasySolutionMap');\r\n};\r\n\r\nwindow.setTimeout(populateEasySolutionMap, 0);\r\n\r\nexport const solver = (arr: puzzle): number[] => {\r\n  if (isObjectEmpty(solutionMap)) {\r\n    populateEasySolutionMap();\r\n  }\r\n\r\n  let solution: number[] | null = null;\r\n  const permutations: permutation[] = [[arr, []]];\r\n  const str = arr.join('');\r\n  if (solutionMap[str]) {\r\n    solution = reverse(solutionMap[str]);\r\n  } else {\r\n    const permutationsMap: {[key: string]: number[]} = {[arr.join('')]: []};\r\n    for (let i = 0; !solution && i < permutations.length && i < 1_000_000; i++) {\r\n      for (let j = 1; !solution && j < arr.length; j++) {\r\n        const newArr = reverseUpTo(permutations[i][0], j);\r\n        const str = newArr.join('');\r\n        if (permutationsMap[str]) continue;\r\n        const steps = [...permutations[i][1], j];\r\n        if (solutionMap[str]) {\r\n          solution = [...steps, ...reverse(solutionMap[str])];\r\n        } else if (isSorted(newArr)) {\r\n          solution = steps;\r\n          break;\r\n        }\r\n\r\n        permutations.push([newArr, steps]);\r\n        permutationsMap[str] = steps;\r\n      }\r\n    }\r\n  }\r\n    \r\n  if (solution) {\r\n    return solution;\r\n  }\r\n  throw new Error('Solver failed for ' + arr);\r\n}\r\n\r\nexport const getHints = (arr: puzzle): {solution: number[], goodMoves: number[]} => {\r\n  const solution = solver(arr);\r\n  const goodMoves: number[] = [];\r\n  for (let i = 1; i < arr.length; i++) {\r\n    if (solution[0] === i) {\r\n      goodMoves.push(i);\r\n      continue;\r\n    }\r\n    const newArr = reverseUpTo(arr, i);\r\n    const newSolution = solver(newArr);\r\n    if (newSolution.length < solution.length) goodMoves.push(i);\r\n  }\r\n  return {solution, goodMoves};\r\n}","import './App.css';\r\n\r\nimport useEventListener from '@use-it/event-listener';\r\nimport debounce from 'lodash.debounce';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\n\r\nimport Log from './components/Log';\r\nimport NumberSelector from './components/NumberSelector';\r\nimport { isSorted, randElement, reverseUpTo, shuffle } from './helpers/helpers';\r\nimport { puzzle } from './helpers/puzzle';\r\nimport { getHints, solver } from './helpers/solver';\r\n\r\nconst START_MESSAGE =\r\n  'Your goal is to sort the list. Click a number, and all numbers from the beginning to that point will be reversed. How many turns will it take?';\r\n\r\nconst getShuffledNumbers = (): puzzle => shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]) as puzzle;\r\n\r\nconst doTheThing = debounce((fn, value) => {\r\n  fn(value);\r\n}, 100);\r\n\r\nfunction App() {\r\n  const [logs, setLogs] = useState<string[]>([START_MESSAGE]);\r\n  const [numArr, setNumArr] = useState<puzzle>(getShuffledNumbers());\r\n  const [winCount, setWinCount] = useState(0);\r\n  const [turns, setTurns] = useState(0);\r\n  const [maxLogs, setMaxLogs] = useState(25);\r\n  const [perfect, setPerfect] = useState(solver(numArr).length);\r\n  const [startColor, setStartColor] = useState('#bc15a0');\r\n  const [endColor, setEndColor] = useState('#5fdbdd');\r\n\r\n  const numbersSorted = isSorted(numArr);\r\n\r\n  const { solution, goodMoves } = getHints(numArr);\r\n\r\n  const addLog = (s: string) => {\r\n    setLogs([...logs, s].slice(-1 * maxLogs));\r\n  };\r\n\r\n  const reset = () => {\r\n    setWinCount(winCount + 1);\r\n    const newPuzzle = getShuffledNumbers();\r\n    setNumArr(newPuzzle);\r\n    setTurns(0);\r\n    const newPerfect = solver(newPuzzle).length;\r\n    setPerfect(newPerfect);\r\n    addLog(`Game ${winCount + 2}: Good luck! The best strategy solves this in ${newPerfect} steps.`);\r\n  };\r\n\r\n  const handleReverseUpTo = (i: number): void => {\r\n    if (i === 0) return;\r\n    const newArr = reverseUpTo(numArr, i);\r\n\r\n    addLog(\r\n      `Attempt ${turns + 1}: ${numArr.join(', ')} - flip ${i + 1}` + (goodMoves.includes(i) ? ' (Good move!)' : '')\r\n    );\r\n    setNumArr(newArr);\r\n    setTurns(turns + 1);\r\n  };\r\n\r\n  const logSolution = () => {\r\n    console.log(solver(numArr));\r\n  };\r\n\r\n  function handleKeyDown(ev: KeyboardEvent) {\r\n    if (!/^\\d$/.test(ev.key)) return;\r\n    handleReverseUpTo(Number(ev.key));\r\n  }\r\n\r\n  const handleVictory = () => {\r\n    const overage = turns - perfect;\r\n    let message;\r\n    if (overage === 0) {\r\n      message = `🎉🥳🎈PERFECT GAME!🎈🥳🎉`;\r\n    } else if (overage <= 2) {\r\n      message = `Nearly flawless!`;\r\n    } else if (overage <= 5) {\r\n      message = `Well done! You finished in ${overage} moves over par.`;\r\n    } else {\r\n      message = `Ouch! You went ${overage} moves over par. Better luck next time.`;\r\n    }\r\n    const invites = ['Go again?', 'Another game?', 'Try another?', 'One more time?', 'Hit that New Game button!'];\r\n    addLog(`${message} ${randElement(invites)}`);\r\n  };\r\n\r\n  const handleColorChange = ({ target: { value, name } }: ChangeEvent<HTMLInputElement>) => {\r\n    const onChangeComplete = name === 'start' ? setStartColor : setEndColor;\r\n    doTheThing(onChangeComplete, value);\r\n  };\r\n\r\n  useEventListener('keydown', (ev: Event) => handleKeyDown(ev as KeyboardEvent));\r\n\r\n  useEffect(() => {\r\n    if (numbersSorted) handleVictory();\r\n  }, [numArr, numbersSorted]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <input type=\"color\" onChange={handleColorChange} value={startColor} name=\"start\" /> {startColor}\r\n      <input type=\"color\" onChange={handleColorChange} value={endColor} name=\"end\" /> {endColor}\r\n      <button onClick={reset}>{numbersSorted ? 'New Game' : 'Reset'}</button>\r\n      <br></br>\r\n      <br></br>\r\n      <NumberSelector\r\n        startColor={startColor}\r\n        endColor={endColor}\r\n        numArr={numArr}\r\n        reverseUpTo={handleReverseUpTo}\r\n        tryCount={turns + 1}\r\n        goodMoves={goodMoves}\r\n      ></NumberSelector>\r\n      <Log logs={logs} maxLogs={maxLogs}></Log>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}